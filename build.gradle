buildscript {
    repositories {
        jcenter()
        maven { url "https://jitpack.io" }
        flatDir{
            dirs'libs'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.2'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.4.1'
        classpath "com.jfrog.bintray.gradle:gradle-bintray-plugin:1.0"
        classpath 'com.google.gms:google-services:3.0.0'
    }
}
apply plugin: 'com.android.application'
dependencies {
    compile fileTree(include: '*.jar', dir: 'libs')
    compile files('libs/Volley.jar')
    compile files('libs/fastjson-1.1.36.jar')
    compile files('libs/NineOldAndroid-2.4.0.jar')
    compile files('libs/BaiduLBS_Android.jar')
    compile files('libs/bfcloudplayer.jar')
    compile files('libs/bfcaptor.jar')
    compile files('libs/AMap_Services_V2.7.0_20151125.jar')
    compile files('libs/crop.jar')
    compile files('libs/BDAutoUpdateSDK_20150605_V1.2.0.jar')
    compile files('libs/need_lib.jar')
    compile files('libs/patchupdate.jar')
    compile files('libs/SuperIDSDK.jar')
    compile 'com.android.support:multidex:1.0.1'
    compile files('libs/ShareSDK-Core-2.7.6.jar')
    compile files('libs/ShareSDK-QZone-2.7.6.jar')
    compile files('libs/ShareSDK-ShortMessage-2.7.6.jar')
    compile files('libs/ShareSDK-SinaWeibo-2.7.6.jar')
    compile files('libs/ShareSDK-Wechat-2.7.6.jar')
    compile files('libs/ShareSDK-Wechat-Core-2.7.6.jar')
    compile files('libs/ShareSDK-Wechat-Moments-2.7.6.jar')
    compile files('libs/MobCommons-2016.0816.1507.jar')
    compile files('libs/MobTools-2016.0816.1507.jar')
    compile project(':Rong_IMKit_v2_7_0_dev')
    compile name: 'pickerview', ext: 'aar'
    compile 'com.android.support:appcompat-v7:24.2.0'
    compile project(':library')
    compile files('libs/alipaySdk-20160223.jar')
    compile files('libs/Baidu_Mtj_3.7.4.5.jar')
    compile files('libs/butterknife-7.0.1.jar')
    compile files('libs/commons-codec-1.4.jar')
    compile files('libs/exoplayerlib.jar')
    compile files('libs/gson-2.2.4.jar')
    compile files('libs/jsoup-1.9.2.jar')
    compile files('libs/libammsdk.jar')
    compile files('libs/okhttp-2.6.0.jar')
    compile files('libs/okio-1.6.0.jar')
    compile files('libs/picasso-2.5.2.jar')
    compile files('libs/SMSSDK-2.0.2.jar')
    compile files('libs/zxing.jar')
}

//configurations {
//    all*.exclude group: 'com.android.support', module: 'support-v4'
//    all*.exclude group: 'com.android.support', module:'support-annotations'
//}

repositories {
    flatDir{
        dirs'libs'
    }
}
allprojects {
    repositories {
        jcenter()
    }
}
android {

    useLibrary 'org.apache.http.legacy'
    compileSdkVersion 25
    buildToolsVersion "25.0.2"
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
    defaultConfig {
                ndk {
                    abiFilters 'armeabi'
                    abiFilters.add("x86")
                    abiFilters.add("x86_64")
                    abiFilters.add("armeabi-v7a")
                    abiFilters 'arm64-v8a'
                }
                multiDexEnabled true

            }
    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']

        }

        instrumentTest.setRoot('tests')

        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    signingConfigs {
        release {
            storeFile file('app.keystore')
            keyAlias 'activeplan'
            keyPassword 'qq584968058'
            storePassword 'qq584968058'
        }
        debug {
            storeFile file('debug.keystore')
        }
    }

    buildTypes {
        release {
            shrinkResources false
            debuggable true
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.release
        }
    }

//    afterEvaluate {
//        tasks.matching {
//            it.name.startsWith('dex')
//        }.each { dx ->
//            if (dx.additionalParameters == null) {
//                dx.additionalParameters = []
//            }
//            dx.additionalParameters += '--multi-dex' // enable multidex
//
//            // optional
//            // dx.additionalParameters += "--main-dex-list=$projectDir/<filename>".toString() // enable the main-dex-list
//        }
//    }

}


